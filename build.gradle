buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0"
    }
}

plugins {
    id("java")
    id("idea")
    id("eclipse")
    id("jacoco")
    id("io.github.gradle-nexus.publish-plugin") version "1.3.0"
}

version = '0.32.2-SNAPSHOT'
group = 'de.otto.synapse'

ext {
    awsSdkVersion = "2.24.5"
    springBootVersion = "3.2.2"
    edisonVersion = "3.2.0"
    testcontainersVersion = "1.19.4"
}


jacocoTestReport {
    reports {
        xml.required.set(true)
        html.required.set(true)
    }
}

nexusPublishing {
    repositories {
        sonatype()
    }
}

test.finalizedBy jacocoTestReport

tasks.register('startLocalStack', Exec) {
    commandLine "docker", "run", "--name", "synapse_localstack", "-d", "-p", "4566:4566", "localstack/localstack:3.0.2"
}

tasks.register('stopLocalStack', Exec) {
    commandLine 'docker', 'rm', '-f', 'synapse_localstack'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply from: "${rootDir}/jacoco.gradle"

    sourceCompatibility = '17'
    targetCompatibility = '17'

    dependencies {
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

        implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))

        testImplementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
        testImplementation(platform("org.testcontainers:testcontainers-bom:${testcontainersVersion}"))

        implementation(platform("software.amazon.awssdk:bom:${awsSdkVersion}"))

    }

    task allDeps(type: DependencyReportTask) {}

    compileJava.dependsOn(processResources)

    project.afterEvaluate {
        tasks.withType(JavaCompile).configureEach {
            options.compilerArgs.add("-parameters")
        }
    }

    version = parent.version
    group = parent.group

    java {
        withJavadocJar()
        withSourcesJar()
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/releases/' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }

}
