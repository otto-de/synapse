apply plugin: 'java-library'

dependencies {

    implementation project(':synapse-core:')

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation "org.springframework:spring-context:${springVersion}"

    implementation "org.springframework:spring-aop:${springVersion}"
    implementation "org.aspectj:aspectjweaver:1.9.6"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.2"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.2"

    implementation("net.openhft:chronicle-map:3.21ea41") {
        exclude group: "com.intellij", module: "annotations"
    }

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "com.jayway.jsonpath:json-path-assert:2.5.0"
    testImplementation 'com.tngtech.java:junit-dataprovider:1.13.1'
    testImplementation "org.awaitility:awaitility:4.0.3"
    testImplementation "org.mockito:mockito-core:3.8.0"
    testImplementation "ch.qos.logback:logback-core:1.2.3"
    testImplementation "ch.qos.logback:logback-classic:1.2.3"
}

apply plugin: 'maven'
apply plugin: 'signing'

jar {
    manifest.attributes provider: 'gradle'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'synapse-testsupport'
                packaging 'jar'
                description 'A library used at otto.de to implement Spring Boot based event-sourcing microservices.'
                url 'http://github.com/otto-de/synapse'

                scm {
                    url 'scm:git@github.com:otto-de/synapse.git'
                    connection 'scm:git@github.com:otto-de/synapse.git'
                    developerConnection 'scm:git@github.com:otto-de/synapse.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'gsteinacker'
                        name 'Guido Steinacker'
                    }
                    developer {
                        id 'mbargmann'
                        name 'Matthias Bargmann'
                    }
                    developer {
                        id 'fbregulla'
                        name 'Frank Bregulla'
                    }
                    developer {
                        id 'ftorkler'
                        name 'Florian Torkler'
                    }
                    developer {
                        id 'miregel'
                        name 'Micha Regel'
                    }
                    developer {
                        id 'hstruebe'
                        name 'Henning Strueber'
                    }
                    developer {
                        id 'sweiler'
                        name 'Simon Weiler'
                    }
                }
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign jar
    sign javadocJar
    sign sourcesJar
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

